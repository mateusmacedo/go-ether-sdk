// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	model "github.com/mateusmacedo/go-ether-sdk/test/fixture/blog/domain/model"
	mock "github.com/stretchr/testify/mock"
)

// PostOption is an autogenerated mock type for the PostOption type
type PostOption struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *PostOption) Execute(_a0 *model.Post) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Post) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPostOption creates a new instance of PostOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPostOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *PostOption {
	mock := &PostOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
